<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzx.crm.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.zzx.crm.domain.Employee">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="input_time" jdbcType="DATE" property="inputTime"/>
        <result column="state" jdbcType="BIT" property="state"/>
        <result column="admin" jdbcType="BIT" property="admin"/>
        <association property="dept" columnPrefix="d_" javaType="com.zzx.crm.domain.Department">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from employee
        where id = #{id}
    </delete>
    <insert id="insert" keyProperty="id" parameterType="com.zzx.crm.domain.Employee" useGeneratedKeys="true">
        insert into employee (username, realname, password,
          tel, email, dept_id,
          input_time, state, admin)
        values (#{username}, #{realname}, #{password},
          #{tel}, #{email}, #{dept.id},
          #{inputTime}, #{state}, #{admin})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.zzx.crm.domain.Employee">
        update employee
        set username = #{username},
          realname = #{realname},
          password = #{password},
          tel = #{tel},
          email = #{email},
          dept_id = #{dept.id},
          input_time = #{inputTime},
          state = #{state},
          admin = #{admin}
        where id = #{id}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id, username, realname, password, tel, email, dept_id, input_time, state,
        admin
        from employee
        where id = #{id}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, username, realname, password, tel, email, dept_id, input_time, state,
        admin
        from employee
    </select>
    <select id="getEmployeeForLogin" resultMap="BaseResultMap">
        select * from employee where username=#{username} and password=#{password}
    </select>
    <sql id="where_sql"></sql>
    <select id="queryForPageCount" resultType="java.lang.Long">
        select count(*) from employee
        <include refid="where_sql"/>
    </select>
    <select id="queryForPage" resultMap="BaseResultMap">
        select e.id, e.username, e.realname, e.tel, e.email, e.input_time, e.state, e.admin,
        d.id as d_id, d.name as d_name
        from employee e left join department d on (e.dept_id = d.id)
        <include refid="where_sql"/>
        <if test="page!=null">
            limit ?,?
        </if>
    </select>
</mapper>